% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pre_de_contamination_screen.R
\name{contamination_ratio_metric}
\alias{contamination_ratio_metric}
\title{Clusters by gene contamination ratio metric.}
\usage{
contamination_ratio_metric(
  assay_matrix,
  metadata,
  adjacency_matrix = NULL,
  cluster_col = c("RNA_nbclust_clusters", "spatialClusteringAssignments"),
  cellid_col = "cell_ID",
  grouping_col = NULL,
  sdimx_col = NULL,
  sdimy_col = NULL,
  radius = NULL,
  split_neighbors_by_colname = NULL,
  verbose = TRUE
)
}
\arguments{
\item{assay_matrix}{counts or normalized assay matrix.
Raw counts recommended for count distributions s.a. negative binomial (i.e., family=nbinom2).
Normalized is recommended for gaussian models.}

\item{metadata}{data.table or data.frame of meta.data associated with assay.
Should include columns corresponding to "cluster_col" and "grouping_col" argument.  If \code{adjacency_matrix} is}

\item{adjacency_matrix}{cell x cell matrix indicating which cells are neighbors of which other cells.
This can be passed as the nblist$cell_adjacency_mat object from pre_de object obtained from running smiDE::pre_de.
If missing or NULL, this will be created from \code{sdimx_col}, \code{sdimy_col}, \code{cellid_col}
,and optional \code{split_neighbors_by_colnames} columns in the metadata.}

\item{cluster_col}{column indicating clusters by which to calculate contamination metric. For example, column indicating cell type.}

\item{cellid_col}{name of column indicating the cell ID in the metadata, i.e., "cell_ID", corresponding to column names in provided \code{assay_matrix}.}

\item{grouping_col}{optional vector of column names in meta data by which to separately calculate contamination metric. For example, could be the primary variable of interest in a Differential Expression (DE) analysis.
For example, if running a DE analysis for 'niche', \code{grouping_col='niche'} will calculate metric separately for each 'niche', and can be used to define a filter for excluding genes likely to be
contaminated for certain cell types in any level of 'niche'.}

\item{sdimx_col}{name of column with x-coordinate for cell, i.e., "sdimx". Only needed if adjacency_matrix is not provided.}

\item{sdimy_col}{name of column with x-coordinate for cell, i.e., "sdimy". Only needed if adjacency_matrix is not provided.}

\item{radius}{radius within which to identify all other neighboring cells, i.e, 0.05.  Only needed if adjacency_matrix is not provided.}

\item{verbose}{print message to screen describing status of calculation.}
}
\description{
For each cluster and gene, returns
\itemize{
\item the average expression of \code{assay_matrix} corresponding to cells in a cluster
\item the average expression of \code{assay_matrix} in cells which are both neighbors to cells in the cluster, and not belonging to the same cluster.
}
}
\details{
Genes which are lowly expressed in a cluster, but highly expressed in \strong{neighboring cells} of that cluster may be more prone to contamination or segmentation errors.
Contamination-prone genes may be prioritized for exclusion from downstream cell type specific analyses , such as cell type specific differential expression.
}
\examples{
library(Giotto)
library(data.table); setDTthreads(1)
datadir<-system.file("extdata", package="smiDE")
gem <- readRDS(paste0(datadir, "/small_nsclc.rds"))

config_pre_de <- list(assay = "rna"
                      ,counts = "raw" 
                      ,normalized = "normalized"
                      ,cellid_colname = "cell_ID"
                      ,cell_type_metadata_colname = "cell_type"
                      ,split_neighbors_by_colname = "tissue"
                      ,mm_radius = 0.05
                      ,ref_celltype = "fibroblast"
                      ,sdimx_colname = "sdimx"
                      ,sdimy_colname = "sdimy"
                      ,weight_colname = "weight"
                      ,contamination = "sum"
                      ,verbose=TRUE
)
pre_de_obj <- run_pre_de(gem, config_pre_de) 

### Using adjacency matrix from pre_de object
metric_by_niche_1 <- 
contamination_ratio_metric(gem@expression$rna$normalized
                           ,metadata = gem@cell_metadata$rna
                           ,cluster_col = "cell_type"
                           ,grouping_col = "niche"
                           ,adjacency_matrix = pre_de_obj$nblist$adjacency_mat
                           ,cellid_col = "cell_ID"
                           )


metric_by_niche_1
metric_by_niche_1[1:10]

metric_overall_1 <- 
contamination_ratio_metric(gem@expression$rna$normalized
                           ,metadata = gem@cell_metadata$rna
                           ,cluster_col = "cell_type"
                           ,grouping_col = NULL
                           ,adjacency_matrix = pre_de_obj$nblist$adjacency_mat
                           ,cellid_col = "cell_ID"
                           )


metric_overall_1
metric_overall_1[cell_type=="Treg"][order(ratio)][1:10]
metric_overall_1[cell_type=="Treg"][ratio==Inf][order(-avg_neighbor_othercluster)][1:10]


### Creating adjacency matrix from metadata. (Haven't run smiDE::pre_de)

metainfo <- data.table::copy(gem@cell_metadata$rna)
metainfo <- merge(metainfo, gem@spatial_locs$raw, by="cell_ID")
metric_by_niche_2 <- 
contamination_ratio_metric(gem@expression$rna$normalized
                           ,metadata = metainfo
                           ,cluster_col = "cell_type"
                           ,grouping_col = "niche"
                           ,split_neighbors_by_colname = c("Run_Tissue_name")
                           ,radius = 0.05
                           ,sdimx_col = "sdimx"
                           ,sdimy_col = "sdimy"
                           ,cellid_col = "cell_ID"
                           )

metric_by_niche_2[1:5]; metric_by_niche_1[1:5] ## same

}
